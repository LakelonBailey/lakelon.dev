http {
    upstream sso_app {
        server sso-frontend:80; # Assuming the React app serves on port 80
    }

    upstream blog_app {
        server blog-frontend:80; # Adjust if the port differs
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name blog.lakelon.dev sso.lakelon.dev;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server block for sso.lakelon.dev with security headers
    server {
        listen 443 ssl http2;
        server_name sso.lakelon.dev;

        ssl_certificate /etc/letsencrypt/live/sso.lakelon.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sso.lakelon.dev/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; object-src 'none';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        location / {
            proxy_pass http://sso_app;
            # Standard proxy settings...
        }

        location /api {
            proxy_pass http://sso-backend:8000;
            # Standard proxy settings for API...
        }
    }

    # HTTPS Server block for blog.lakelon.dev with security headers
    server {
        listen 443 ssl http2;
        server_name blog.lakelon.dev;

        ssl_certificate /etc/letsencrypt/live/blog.lakelon.dev/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/blog.lakelon.dev/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; object-src 'none';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        location / {
            proxy_pass http://blog_app;
            # Standard proxy settings...
        }

        location /api {
            proxy_pass http://blog-backend:8000;
            # Standard proxy settings for API...
        }
    }
}